plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply from: "./Compound/properties.gradle" // we have to have Compound here to even compile, just snag the version and group data from it directly.
modBaseName = "molecule"

evaluationDependsOn(':Compound')


version = modVersion
group = modGroup
archivesBaseName = modBaseName

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mappingsChannel, version: mappingsVersion

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                molecule {
                    sources sourceSets.main, project(':Compound').sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                molecule {
                    sources sourceSets.main, project(':Compound').sourceSets.main
                }
            }
        }
    }
}

configurations {
    runtime.exclude group: 'com.tridevmc.compound'
}

dependencies {
    compileOnly project(':Compound')

    minecraft "net.minecraftforge:forge:${forgeVersion}"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes(["Specification-Title"     : "Molecule",
                    "Specification-Vendor"    : "Trident",
                    "Specification-Version"   : "24.0", // We are version 1 of the modlauncher specification
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : "${version}",
                    "Implementation-Vendor"   : "Trident",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

jar.finalizedBy('reobfJar')